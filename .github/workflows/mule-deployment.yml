##########################################################################
# Mulesoft CICD Pipeline - Deploy Mulesoft Application
##########################################################################

name: Deployment
on:
  workflow_call:

env:
  CONFIGURATIONS_REPOSITORY: common-configurations
  GLOBAL_CONFIGURATION: _global.yml
  MESSAGE_ASSET_NOT_CONFIGURED: "The mulesoft asset doesn't have any deployment configuration"
  MESSAGE_SERVICE_INTERNAL_ERROR: "There was an internal error in the deployment process"
  MESSAGE_SERVICE_NOT_DEPLOYED: "The service couldn't be deployed"
  MESSAGE_SERVICE_SUCCESS_DEPLOYED: "The service was successfully deployed"
  MESSAGE_SERVICE_BAT_SUCCESS: "The BAT tests run successfully"
  MESSAGE_SERVICE_NO_BAT: "There aren't any BAT tests"
  MESSAGE_SERVICE_BAT_FAILURE: "BAT testig with failures"

jobs:

  CloudHub:
    name: CloudHub
    runs-on: ubuntu-latest
    steps:

      - name: Create a GitHub App installation access token
        uses: peter-murray/workflow-application-token-action@v3
        id: app-token
        with:
          application_id: ${{ secrets.BTFACRM_GITHUB_AUTOMATIONBOT_APPID }}
          application_private_key: ${{ secrets.BTFACRM_GITHUB_AUTOMATIONBOT_PEM }}

      - name: Verify app token
        shell: bash
        run: |
          echo " "
          echo "***********************************************"
          echo "Verify App token"
          echo "***********************************************"
          echo " "
          echo " App token: ${{ steps.app-token.outputs.token }}"
          echo "github_automationbot_token=${{ steps.app-token.outputs.token }}" >> $GITHUB_ENV

      - name: Get secrets from Github
        uses: kanga333/variable-mapper@master
        with:
          key: "master"
          map: |
            {
              "master": {
                  "btfacrm_anypoint_environment_dev_clientid": "${{ secrets.BTFACRM_ANYPOINT_ENVIRONMENT_DEV_CLIENTID }}",
                  "btfacrm_anypoint_environment_dev_secret": "${{ secrets.BTFACRM_ANYPOINT_ENVIRONMENT_DEV_SECRET }}",
                  "btfacrm_anypoint_environment_prd_clientid": "${{ secrets.BTFACRM_ANYPOINT_ENVIRONMENT_PRD_CLIENTID }}",
                  "btfacrm_anypoint_environment_prd_secret": "${{ secrets.BTFACRM_ANYPOINT_ENVIRONMENT_PRD_SECRET }}",

                  "btfacrm_apisalesforce_dev_clientsecret": "${{ secrets.BTFACRM_APISALESFORCE_DEV_CLIENTSECRET }}",
                  "btfacrm_apisalesforce_dev_clientid": "${{ secrets.BTFACRM_APISALESFORCE_PRD_CLIENTID }}",
                  "btfacrm_apisalesforce_prd_clientid": "${{ secrets.BTFACRM_HTTPS_DEV_JKSKEYPASSWORD }}",
                  "btfacrm_apisalesforce_prd_clientsecret": "${{ secrets.BTFACRM_APISALESFORCE_PRD_CLIENTSECRET }}",

                  "cicd_connectedapp_clientid": "${{ secrets.BTFACRM_CICD_CONNECTEDAPP_CLIENTID }}",
                  "cicd_connectedapp_secret": "${{ secrets.BTFACRM_CICD_CONNECTEDAPP_SECRET }}",

                  "github_gist_accesstoken": "${{ secrets.BTFACRM_GITHUB_GIST_ACCESSTOKEN }}",
                  "github_admintasks_accesstoken": "${{ secrets.BTFACRM_GITHUB_ADMINTASKS_ACCESSTOKEN }}",

                  "btfacrm_https_dev_jkspath": "${{ secrets.BTFACRM_HTTPS_DEV_JKSPATH }}",
                  "btfacrm_https_dev_jksalias": "${{ secrets.BTFACRM_HTTPS_DEV_JKSALIAS }}",
                  "btfacrm_https_dev_jkskeypassword": "${{ secrets.BTFACRM_HTTPS_DEV_JKSKEYPASSWORD }}",
                  "btfacrm_https_prd_jkspath": "${{ secrets.BTFACRM_HTTPS_PRD_JKSPATH }}",
                  "btfacrm_https_prd_jksalias": "${{ secrets.BTFACRM_HTTPS_PRD_JKSALIAS }}",
                  "btfacrm_https_prd_jkskeypassword": "${{ secrets.BTFACRM_HTTPS_PRD_JKSKEYPASSWORD }}",

                  "btfacrm_mssql_dev_host": "${{ secrets.BTFACRM_MSSQL_DEV_HOST }}",
                  "btfacrm_mssql_dev_port": "${{ secrets.BTFACRM_MSSQL_DEV_PORT }}",
                  "btfacrm_mssql_dev_user": "${{ secrets.BTFACRM_MSSQL_DEV_USER }}",
                  "btfacrm_mssql_dev_password": "${{ secrets.BTFACRM_MSSQL_DEV_PASSWORD }}",
                  "btfacrm_mssql_dev_database": "${{ secrets.BTFACRM_MSSQL_DEV_DATABASE }}",

                  "btfacrm_mssql_prd_host": "${{ secrets.BTFACRM_MSSQL_PRD_HOST }}",
                  "btfacrm_mssql_prd_port": "${{ secrets.BTFACRM_MSSQL_PRD_PORT }}",
                  "btfacrm_mssql_prd_user": "${{ secrets.BTFACRM_MSSQL_PRD_USER }}",
                  "btfacrm_mssql_prd_password": "${{ secrets.BTFACRM_MSSQL_PRD_PASSWORD }}",
                  "btfacrm_mssql_prd_database": "${{ secrets.BTFACRM_MSSQL_PRD_DATABASE }}",

                  "mulesoft_nexus_ee_user": "${{ secrets.BTFACRM_MULESOFT_NEXUS_EE_USER }}",
                  "mulesoft_nexus_ee_password": "${{ secrets.BTFACRM_MULESOFT_NEXUS_EE_PASSWORD }}",

                  "btfacrm_salesforce_dev_storepassword": "${{ secrets.BTFACRM_SALESFORCE_DEV_STOREPASSWORD }}",
                  "btfacrm_salesforce_dev_principal": "${{ secrets.BTFACRM_SALESFORCE_DEV_PRINCIPAL }}",
                  "btfacrm_salesforce_dev_consumerkey": "${{ secrets.BTFACRM_SALESFORCE_DEV_CONSUMERKEY }}",
                  "btfacrm_salesforce_dev_keystore": "${{ secrets.BTFACRM_SALESFORCE_DEV_KEYSTORE }}",
                  "btfacrm_salesforce_dev_audienceurl": "${{ secrets.BTFACRM_SALESFORCE_DEV_AUDIENCEURL }}",
                  "btfacrm_salesforce_dev_tokenendpoint": "${{ secrets.BTFACRM_SALESFORCE_DEV_TOKENENDPOINT }}",
                  "btfacrm_salesforce_dev_certificatealias": "${{ secrets.BTFACRM_SALESFORCE_DEV_CERTIFICATEALIAS }}",

                  "btfacrm_salesforce_prd_storepassword": "${{ secrets.BTFACRM_SALESFORCE_PRD_STOREPASSWORD }}",
                  "btfacrm_salesforce_prd_principal": "${{ secrets.BTFACRM_SALESFORCE_PRD_PRINCIPAL }}",
                  "btfacrm_salesforce_prd_consumerkey": "${{ secrets.BTFACRM_SALESFORCE_PRD_CONSUMERKEY }}",
                  "btfacrm_salesforce_prd_keystore": "${{ secrets.BTFACRM_SALESFORCE_PRD_KEYSTORE }}",
                  "btfacrm_salesforce_prd_tokenendpoint": "${{ secrets.BTFACRM_SALESFORCE_PRD_TOKENENDPOINT }}",
                  "btfacrm_salesforce_prd_audienceurl": "${{ secrets.BTFACRM_SALESFORCE_PRD_AUDIENCEURL }}",
                  "btfacrm_salesforce_prd_certificatealias": "${{ secrets.BTFACRM_SALESFORCE_PRD_CERTIFICATEALIAS }}"
              }
            }

      # Environment variable 'github_admintasks_accesstoken' must be configured to run the action
      - name: Get service configuration
        uses: btfacrm/common-devops/packages/configuration-servicev3@main

      - name: Get jar file
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: '${{ github.repository }}'
          version: 'tags/${{ env.deployment_version }}'
          regex: false
          file: "${{ env.service_artifact }}-${{ env.deployment_version }}-${{ env.configuration_apptype }}.jar"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug show root files
        id: debug-workplace
        shell: bash
        run: |
          echo " "
          echo "***************************************"
          echo "Debug show root files"
          echo "***************************************"
          echo " "
          ls -l
          exit 1

#      - name: Deploy the service in the Cloudhub1
#        id: deployment-ch1
#        uses: btfacrm/common-devops/packages/process-cloudhub1v2@main
#        with:
#          deployment-env: ${{ env.deployment_environment }}

      - name: Create badge for deployment
        uses: btfacrm/common-devops/packages/badge@main
        with:
          label: '${{ env.deployment_environment }} version'
          status: '${{ env.deployment_version }}'
          color: '535597'
          file: ${{ env.service_name }}-${{ env.deployment_environment }}.svg

      - name: Create a deployment issue
        id: create-deployment-issue  
        env:
          GITHUB_TOKEN: ${{ env.github_automationbot_token }}
        shell: bash
        run: |
          echo " "
          echo "***********************************************"
          echo "Create Deployment Issue "
          echo "***********************************************"
          echo " "
          echo "  Create issue for deployment, current environment: $deployment_environment, from: $configuration_environments"
          
          # Environment list to an array
          read -a array <<< "$configuration_environments"

          # Find the current environment in the list
          currentIndex=-1
          for i in "${!array[@]}"; do
            if [[ "${array[$i]}" = "$deployment_environment" ]]; then
              currentIndex=$i;
            fi
          done

          if (( $currentIndex == -1 )); then
            echo "Error, the current environment is not in the list of deployment"
            exit 1
          fi

          # Find the next environment for deployment
          sizearray=${#array[@]}
          nextindex=$(($currentIndex + 1))

          if (( $sizearray > $nextindex )); then
            nextenvironment=${array[$nextindex]}

            echo "  Next environment to deploy the application: $nextenvironment"
            gh -R "${{ github.repository }}" issue create \
                -t "Deployment $nextenvironment ${{ env.service_name }} ${{ env.service_version }}" \
                -a "${{ env.github_deployeruser }}" \
                -b "The deployment job in $deployment_environment environment triggered this issue" \
                -l "deployment"
          else
            echo "  No more environments to deploy"
          fi

