name: 'Summary - Publish test results'
description: 'Summary - Publish test results'
inputs:
  label:
    required: true
    description: label for badge
  status:
    required: true
    description: Text status for the badge
  color:
    required: true
    description: Badge color
  file:
    required: true
    description: Name of the badge file
  folder:
    required: true
    description: Folder to save the file

runs:
  using: "composite"
  steps:

    - name: Debug message
      shell: bash
      run: |
        echo " "
        echo "*****************************************************"
        echo "Create badge"
        echo "*****************************************************"
        echo " "            

    #- name: Create badge
    #  id: create-badge
    #  uses: emibcn/badge-action@master
    #  with:
    #    label: ${{ inputs.label }}
    #    status: ${{ inputs.status }}
    #    color: ${{ inputs.color }}
    #    path: ${{ inputs.file }}
    
    - name: Debug message
      shell: bash
      run: |
        echo " "
        echo "*****************************************************"
        echo "Upload badge"
        echo "*****************************************************"
        echo " "
        echo "  Get the badge file as base64"
        echo " "

        #1. This works
        #content_base64="PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB3aWR0aD0iMTgyIiBoZWlnaHQ9IjIwIiByb2xlPSJpbWciIGFyaWEtbGFiZWw9ImNvZGUgcmVwb3NpdG9yeTogbXkgcmVwb3NpdG9yeSI+PHRpdGxlPmNvZGUgcmVwb3NpdG9yeTogbXkgcmVwb3NpdG9yeTwvdGl0bGU+PGxpbmVhckdyYWRpZW50IGlkPSJzIiB4Mj0iMCIgeTI9IjEwMCUiPjxzdG9wIG9mZnNldD0iMCIgc3RvcC1jb2xvcj0iI2JiYiIgc3RvcC1vcGFjaXR5PSIuMSIvPjxzdG9wIG9mZnNldD0iMSIgc3RvcC1vcGFjaXR5PSIuMSIvPjwvbGluZWFyR3JhZGllbnQ+PGNsaXBQYXRoIGlkPSJyIj48cmVjdCB3aWR0aD0iMTgyIiBoZWlnaHQ9IjIwIiByeD0iMyIgZmlsbD0iI2ZmZiIvPjwvY2xpcFBhdGg+PGcgY2xpcC1wYXRoPSJ1cmwoI3IpIj48cmVjdCB3aWR0aD0iOTUiIGhlaWdodD0iMjAiIGZpbGw9IiM1NTUiLz48cmVjdCB4PSI5NSIgd2lkdGg9Ijg3IiBoZWlnaHQ9IjIwIiBmaWxsPSIjMDA3ZWM2Ii8+PHJlY3Qgd2lkdGg9IjE4MiIgaGVpZ2h0PSIyMCIgZmlsbD0idXJsKCNzKSIvPjwvZz48ZyBmaWxsPSIjZmZmIiB0ZXh0LWFuY2hvcj0ibWlkZGxlIiBmb250LWZhbWlseT0iVmVyZGFuYSxHZW5ldmEsRGVqYVZ1IFNhbnMsc2Fucy1zZXJpZiIgdGV4dC1yZW5kZXJpbmc9Imdlb21ldHJpY1ByZWNpc2lvbiIgZm9udC1zaXplPSIxMTAiPjx0ZXh0IGFyaWEtaGlkZGVuPSJ0cnVlIiB4PSI0ODUiIHk9IjE1MCIgZmlsbD0iIzAxMDEwMSIgZmlsbC1vcGFjaXR5PSIuMyIgdHJhbnNmb3JtPSJzY2FsZSguMSkiIHRleHRMZW5ndGg9Ijg1MCI+Y29kZSByZXBvc2l0b3J5PC90ZXh0Pjx0ZXh0IHg9IjQ4NSIgeT0iMTQwIiB0cmFuc2Zvcm09InNjYWxlKC4xKSIgZmlsbD0iI2ZmZiIgdGV4dExlbmd0aD0iODUwIj5jb2RlIHJlcG9zaXRvcnk8L3RleHQ+PHRleHQgYXJpYS1oaWRkZW49InRydWUiIHg9IjEzNzUiIHk9IjE1MCIgZmlsbD0iIzAxMDEwMSIgZmlsbC1vcGFjaXR5PSIuMyIgdHJhbnNmb3JtPSJzY2FsZSguMSkiIHRleHRMZW5ndGg9Ijc3MCI+bXkgcmVwb3NpdG9yeTwvdGV4dD48dGV4dCB4PSIxMzc1IiB5PSIxNDAiIHRyYW5zZm9ybT0ic2NhbGUoLjEpIiBmaWxsPSIjZmZmIiB0ZXh0TGVuZ3RoPSI3NzAiPm15IHJlcG9zaXRvcnk8L3RleHQ+PC9nPjwvc3ZnPg=="

        curl -o ${{ inputs.file }} "https://img.shields.io/static/v1?label=code%20repository&message=my%20repository&color=blue" && truncate -s -1 ${{ inputs.file }}
        content_base64=$(base64 -w 0 ${{ inputs.file }})
        cat ${{ inputs.file }}

        echo " "
        echo "  content_base64=$content_base64"
        echo " "
   
        url="https://api.github.com/repos/${{github.repository_owner}}/$badge_repository/contents/${{ inputs.folder }}/${{ inputs.file }}"
        echo "  badge url: $url"
        file_details=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ env.github_automationbot_token }}" \
            $url)

        if [[ $file_details == *"Not Found"* ]]; then
          message="Create badge ${{ inputs.folder }}/${{ inputs.file }}"
          echo "  $message"

          curl -s -X PUT \
            -H "Authorization: token ${{ env.github_automationbot_token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"message": "'"$message"'", "content": "'"$content_base64"'", "branch": "main"}' \
            "$url"
        else
          sha=$(echo "$file_details" | jq -r '.sha')
          message="Update badge ${{ inputs.file }}/${{ inputs.file }}"
          echo "  $message, sha: $sha"
          
          curl -s -X PUT \
            -H "Authorization: token ${{ env.github_automationbot_token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"message": "'"$message"'", "sha": "'"$sha"'", "content": "'"$content_base64"'", "branch": "main"}' \
            "$url"
        fi