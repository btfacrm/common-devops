name: 'Summary - Publish test results'
description: 'Summary - Publish test results'
inputs:
  label:
    required: true
    description: label for badge
  status:
    required: true
    description: Text status for the badge
  color:
    required: true
    description: Badge color
  file:
    required: true
    description: Name of the badge file
  folder:
    required: true
    description: Folder to save the file

runs:
  using: "composite"
  steps:

    - name: Debug message
      shell: bash
      run: |
        echo " "
        echo "*****************************************************"
        echo "Create badge"
        echo "*****************************************************"
        echo " "            

    - name: Create badge
      uses: emibcn/badge-action@master
      with:
        label: ${{ inputs.label }}
        status: ${{ inputs.status }}
        color: ${{ inputs.color }}
        path: ${{ inputs.file }}
    
    - name: Debug message
      shell: bash
      run: |
        echo " "
        echo "*****************************************************"
        echo "Upload badge"
        echo "*****************************************************"
        echo " "
        echo "  Get the badge file as base64"

        content_base64=$(cat ${{ inputs.file }});
        #content_base64=$(echo -n $content_base64 | base64)
        #content_base64="VGhpcyBpcyBhIHRlc3QgYW5kIEkgd2FudCB0byBzZWUgaWYgZXZlcnl0aGluZyBpcyB3b3JraW5nIGdyZWF0"
        content_base64=$(printf '%s' "$(< ${{ inputs.file }})" | base64)
        echo " "
        echo "  content_base64=$content_base64"
        echo " "
   
        url="https://api.github.com/repos/${{github.repository_owner}}/$badge_repository/contents/${{ inputs.folder }}/${{ inputs.file }}"
        echo "  badge url: $url"
        file_details=$(curl -s -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ env.github_automationbot_token }}" \
            $url)

        if [[ $file_details == *"Not Found"* ]]; then
          message="Create badge ${{ inputs.folder }}/${{ inputs.file }}"
          echo "  $message"

          curl -s -X PUT \
            -H "Authorization: token ${{ env.github_automationbot_token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"message": "'"$message"'", "content": "'"$content_base64"'", "branch": "main"}' \
            "$url"
        else
          sha=$(echo "$file_details" | jq -r '.sha')
          message="Update badge ${{ inputs.file }}/${{ inputs.file }}"
          echo "  $message, sha: $sha"
          
          curl -s -X PUT \
            -H "Authorization: token ${{ env.github_automationbot_token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"message": "'"$message"'", "sha": "'"$sha"'", "content": "'"$content_base64"'", "branch": "main"}' \
            "$url"
        fi